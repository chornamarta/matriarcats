// <auto-generated />
using LFC.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LFC.DAL.Migrations
{
    [DbContext(typeof(LFCDbContext))]
    [Migration("20220512124309_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LFC.DAL.Models.Courses", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Specialities")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseDescription = "На цьому дввс ви зможете вивчити...",
                            CourseName = "Криптологія",
                            Semester = "FirstSemester",
                            Specialities = "ComputerScience",
                            Year = "Third"
                        },
                        new
                        {
                            CourseId = 2,
                            CourseDescription = "На цьому дввс ви зможете вивчити...",
                            CourseName = "Лінійна алгебра",
                            Semester = "SecondSemester",
                            Specialities = "AppliedMathemetics",
                            Year = "Fourth"
                        });
                });

            modelBuilder.Entity("LFC.DAL.Models.Student", b =>
                {
                    b.Property<int>("StudId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Group")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Specialities")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StudId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudId = 1,
                            Email = "ivan@gmail.com",
                            Group = "ПМІ-41",
                            Name = "Іван",
                            Password = "ivan001",
                            Specialities = 0,
                            Surname = "Іванович"
                        },
                        new
                        {
                            StudId = 2,
                            Email = "marta@gmail.com",
                            Group = "ПМІ-31",
                            Name = "Марта",
                            Password = "marta002",
                            Specialities = 0,
                            Surname = "Чорна"
                        },
                        new
                        {
                            StudId = 3,
                            Email = "ulya@gmail.com",
                            Group = "ПМП-41",
                            Name = "Уля",
                            Password = "ulya003",
                            Specialities = 1,
                            Surname = "Костецька"
                        },
                        new
                        {
                            StudId = 4,
                            Email = "alya@gmail.com",
                            Group = "ПМО-31",
                            Name = "Аля",
                            Password = "akya004",
                            Specialities = 1,
                            Surname = "Сергієнко"
                        });
                });

            modelBuilder.Entity("LFC.DAL.Models.StudentCourses", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 2
                        });
                });

            modelBuilder.Entity("LFC.DAL.Models.Teacher", b =>
                {
                    b.Property<int>("TeachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TeachId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TeacherRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TeachId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeachId = 1,
                            Email = "mal1@gmail.com",
                            FullName = "Малець Р.",
                            Password = "mal1",
                            TeacherRole = "Docent"
                        },
                        new
                        {
                            TeachId = 2,
                            Email = "kost1@gmail.com",
                            FullName = "Костів В.",
                            Password = "kost1",
                            TeacherRole = "Proffesor"
                        });
                });

            modelBuilder.Entity("LFC.DAL.Models.TeacherCourses", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("integer");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer");

                    b.HasKey("TeacherId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("TeacherCourses");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            TeacherId = 2,
                            CourseId = 2
                        });
                });

            modelBuilder.Entity("LFC.DAL.Models.StudentCourses", b =>
                {
                    b.HasOne("LFC.DAL.Models.Courses", "Courses")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LFC.DAL.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LFC.DAL.Models.TeacherCourses", b =>
                {
                    b.HasOne("LFC.DAL.Models.Courses", "Courses")
                        .WithMany("TeacherCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LFC.DAL.Models.Teacher", "Teacher")
                        .WithMany("TeacherCourses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("LFC.DAL.Models.Courses", b =>
                {
                    b.Navigation("StudentCourses");

                    b.Navigation("TeacherCourses");
                });

            modelBuilder.Entity("LFC.DAL.Models.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("LFC.DAL.Models.Teacher", b =>
                {
                    b.Navigation("TeacherCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
